Triplie is an AI bot based on a 5th order Markov model  
The command line version can be compiled on Linux, BSD
and Windows


Triplie creates a directed graph which is made of
- nodes, which represent the words read from the user
- links which represent the relations between words.
  Could also be called language relations
- links that represent the associations between 
  words in a conversation.
  Could also be called context relations.


All relations between words have an integer weight.
They count the number of times the words appeared



Here is an example of a Markov model of 1st order:

hello triplie, how are you

Triplie will do this:
remember word hello
remember word triplie
increase hello X-> triplie by 1
increase triplie <-X hello by 1
remember word how
remember word are
remember word you
increase how X-> are by 1
increase are <-X how by 1
increase are X-> you by 1
increase you <-X are by 1

to get the final graph as shown in the picture:

   ___1->_______            _____1->____  ___1->__
  /             \          /            \/        \
hello         triplie    how           are        you
  \_____<-1_____/          \____<-1____/\___<-1___/


Here, 1-> is a successor link with a weight 1, and
      <-1 a predecessor link with a weight 1.


The same happens with 2nd order markov models, but
in that case a pair of neighbouring words are
connected to the next word in the sentence. 3rd
order uses a triplet of neighbouring words, etc.

The final graph is pretty complex and can't be
represented with ascii drawings.

Obviously, the bot learns language better if the user 
input has more words

The associations (context relations) are formed
when the bot talks to the user. Lets say we have
the following example:

triplie: hello user, are you there right now?
user   : yes I am here, what do you want?

What happens is, keywords are extracted from
both of the lines. The keyword extraction mechanism
is explained below. Lets say these are the keywords

triplie: hello there right now
user   : here what want

Next, all these keywords are connected as associations,
like this:

increment: hello X-> here 
increment: hello X-> what 
increment: hello X-> want 
increment: there X-> here, what, want
increment: right X-> here, what, want
increment: now   X-> here, what, want 

At this point, the learning engine is finished. 

When building the answer, Triplie does the following
steps:

1) extract keywords from user's line
   - the words that hold the most information are
     keywords. According to information theory, the
	 rarest symbols bring the highest amount of
	 information, so the rarest words are considered
	 keywords.

2) find associations that are higly connected with
   the extracted keywords. In the previous example,
   saying "hello are you there right now" would
   result with the associations to the words
   here, what, want (called associated words)

3) try to connect the words from the associations
   to form the reply. 
   - It uses a modified breadth
     first search that begins with any of the 
     associated words and tries to find a path to 
     any of the remaining words untill path is found
     that goes trough all (or most) of them.
   - While searching it only explores nodes that
     are Nth order connected in the markov language 
	 model, for example it will explore the word
	 Z from the word Y only if there is a 2nd order
	 link between predecessor_of(Y) and Z, etc to
	 the Nth order configurable by the user.
   - It may generate as many candidate replies
     as there are associated words, because it must
	 consider each associated word as a beginning
	 word.
   - Then it proceeds to pick the reply that
     a) has the most information (most rarely used)
	    words, and
	 b) is best connected in the language model
     

Planned improvements / TODO:

- Connection to a WordNet database of words in order to
  extract nouns, verbs and additional context (better)

- Thought atoms brain-tree model - 
  At the present moment, triplie has problems with
  pronouns. They are very important in the current
  context, but without the context they have no
  associative meaning because they are common words.
  A brain-tree will help in connecting these
  pronouns with the current context and recognise
  a context pattern when it appears.

- Excitation model for the association network - a possible
  experiment in the future
  Using the association network as a neural network
  by propagating excitation trough it and getting
  the excited atoms as additional contextual keywords.
